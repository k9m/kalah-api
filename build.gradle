plugins {
	id 'org.springframework.boot' version '2.4.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'org.openapi.generator' version '5.1.1'
	id 'java'
	id 'jacoco'
}

ext {
	cucumberVersion = '6.10.3'
	swaggerVersion = '3.0.0'
}

apply plugin: 'org.openapi.generator'
apply plugin: 'jacoco'

group = 'org.k9m.kalah'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

	implementation("io.springfox:springfox-swagger2:$swaggerVersion")
	implementation("io.springfox:springfox-swagger-ui:$swaggerVersion")
	implementation("org.openapitools:jackson-databind-nullable:0.2.1")

	compileOnly 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation group: "de.flapdoodle.embed", name: "de.flapdoodle.embed.mongo"
	

	testImplementation group : 'org.junit.platform', name : 'junit-platform-console'
	testImplementation group : 'io.cucumber', name : 'cucumber-java', version: cucumberVersion
	testImplementation group : 'io.cucumber', name : 'cucumber-junit-platform-engine', version: cucumberVersion
	testImplementation group : 'io.cucumber', name : 'cucumber-spring', version: cucumberVersion
}

openApiGenerate {
	generatorName = "spring"
	inputSpec = "$rootDir/src/main/resources/contract.yml"
	outputDir = "$buildDir/generated-sources"
	apiPackage = "org.k9m.kalah.api"
	modelPackage = "org.k9m.kalah.api.model"
	configOptions = [
			dateLibrary: "java8",
			interfaceOnly: "true",
			swaggerDocketConfig: "false",
			configPackage: "org.k9m.kalah.api.config",
			java8: "true"
	]
	logToStderr = true
}


task itTests(type: JavaExec) {
	dependsOn(testClasses)
	outputs.dir(file("$buildDir/test-results"))
	classpath = sourceSets["test"].runtimeClasspath
	main = "org.junit.platform.console.ConsoleLauncher"
	args("--scan-classpath")
	args("--include-engine", "cucumber")
	args("--reports-dir", file("$buildDir/test-results"))

	finalizedBy jacocoTestReport
}

test {
	useJUnitPlatform()

	testLogging {
		events "passed", "skipped", "failed"
		showStandardStreams = true
	}

	finalizedBy itTests
}


jacoco {
	toolVersion = "0.8.7"
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.enabled true
		csv.enabled true
		html.enabled true
		html.destination file("${buildDir}/jacoco-reports")
	}
}

sourceSets {
	main {
		java {
			srcDir 'build/generated-sources/src/main/java'
		}
	}
}

compileJava.dependsOn tasks.openApiGenerate
